<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Animated Sliders</title>
<style>
  body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 80vh;
    background-color: #000000; /* Very close to black */
    overflow: hidden; /* Hide overflow to prevent scrollbars */
  }

  .header {
    color: #9933ff; /* Purple color for Synware V3 */
    margin-bottom: 40px; /* Increased margin-bottom for more space */
    position: relative;
    animation: floatAnimation 5s infinite alternate; /* Floating animation */
  }

  @keyframes floatAnimation {
    0% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
    100% {
      transform: translateY(0);
    }
  }

  .header::after {
    content: 'Synware V3';
    position: absolute;
    top: 0;
    left: 0;
    color: rgba(153, 51, 255, 0.11); /* Lighter purple text color */
    background-color: rgba(153, 51, 255, 0.1); /* Brighter light background */
    z-index: -1;
    filter: blur(10px); /* Blur effect */
  }

  .container {
    text-align: center;
    color: #fff; /* White text color */
  }

  .slider-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 30px; /* Increased margin between sliders */
  }

  .slider-label {
    text-align: left;
    margin-bottom: 30px; /* Increased margin between slider labels */
  }

  input[type="range"] {
    -webkit-appearance: none;
    appearance: none; /* Standard property */
    width: calc(100% - 30px); /* Adjusted width */
    height: 5px;
    background: #d3d3d3;
    outline: none;
    border-radius: 5px;
    margin-right: 10px;
  }

  input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none; /* Standard property */
    width: 20px;
    height: 20px;
    background: #fff; /* White thumb */
    border-radius: 50%;
    cursor: pointer;
    transition: transform 0.2s ease;
  }

  .slider-value {
    font-size: 14px;
    color: #fff;
  }

  .btn {
    display: inline-block;
    padding: 10px 20px;
    margin: 10px;
    font-size: 16px;
    cursor: pointer;
    background-color: #fff; /* White button */
    color: #9933ff; /* Purple text color */
    border: none;
    border-radius: 5px;
    outline: none;
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  .btn:hover {
    background-color: #f2f2f2; /* Light gray on hover */
  }
</style>
</head>
<body>

<div class="header" id="header">Synware V3</div>

<div class="container">
  <div class="slider-label">
    <span>Lockspeed horizontal</span>
    <div class="slider-container">
      <input type="range" min="1" max="100" value="50" class="slider" id="slider1" oninput="updateSliderValue('slider1')">
      <span id="slider1Value" class="slider-value">50</span>
    </div>
  </div>
  
  <div class="slider-label">
    <span>Lockspeed vertical</span>
    <div class="slider-container">
      <input type="range" min="1" max="100" value="50" class="slider" id="slider2" oninput="updateSliderValue('slider2')">
      <span id="slider2Value" class="slider-value">50</span>
    </div>
  </div>
  
  <div class="slider-label">
    <span>FOV horizontal</span>
    <div class="slider-container">
      <input type="range" min="1" max="500" value="250" class="slider" id="slider3" oninput="updateSliderValue('slider3')">
      <span id="slider3Value" class="slider-value">250</span>
    </div>
  </div>
  
  <div class="slider-label">
    <span>Lockspeed vertical</span>
    <div class="slider-container">
      <input type="range" min="1" max="500" value="250" class="slider" id="slider4" oninput="updateSliderValue('slider4')">
      <span id="slider4Value" class="slider-value">250</span>
    </div>
  </div>
  
  <button class="btn" onclick="applyChanges()">Apply changes</button>
  <button class="btn" onclick="forceStop()">Force stop</button>
</div>

<script>
  function forceStop() {
    fetch('/submit', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ force_stop: true })
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Failed to force stop');
      }
      return response.text();
    })
    .then(data => {
      console.log(data); // Output the response from the server
    })
    .catch(error => {
      console.error('Error:', error);
    });
  }

  function applyChanges() {
    const slider1Value = document.getElementById("slider1").value;
    const slider2Value = document.getElementById("slider2").value;
    const slider3Value = document.getElementById("slider3").value;
    const slider4Value = document.getElementById("slider4").value;

    console.log("Lockspeed horizontal:", slider1Value);
    console.log("Lockspeed vertical:", slider2Value);
    console.log("FOV horizontal:", slider3Value);
    console.log("Lockspeed vertical:", slider4Value);
  }

  function updateSliderValue(sliderId) {
    const slider = document.getElementById(sliderId);
    const sliderValueSpan = document.getElementById(`${sliderId}Value`);
    sliderValueSpan.textContent = slider.value;
  }
</script>

</body>
</html>
